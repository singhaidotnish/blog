name: Jekyll Build

on:
  push:
    branches:
      - main  # Trigger on changes to main
  pull_request:

env:
  PAGES_REPO_NWO: singhaidotnish/blog
  JEKYLL_GITHUB_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set GH_PAT in Environment
        run: echo "GH_PAT=${{ secrets.GH_PAT }}" >> $GITHUB_ENV

      - name: Debug Environment Variables (After Setting GH_PAT)
        run: env | grep GH_

      - name: Set Other Environment Variables
        run: echo "PAGES_REPO_NWO=singhaidotnish/blog" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}  # This is required for authentication

      - name: Debug Secrets
        run: |
          if [ -z "${{ secrets.GH_PAT }}" ]; then
            echo "❌ GH_PAT is NOT set in GitHub Secrets!"
            exit 1
          else
            echo "✅ GH_PAT is set correctly."
          fi

      - name: Set Up Git Remote  # ✅ Check if remote exists, then update or add
        run: |
          git remote remove origin || true  # Remove origin if it exists (ignores errors)
          git remote add origin https://github.com/singhaidotnish/blog.git
          git fetch origin

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Change to match your Jekyll version
          bundler-cache: true   # Automatically installs Bundler & caches gems

      - name: Install Dependencies
        run: |
          gem install bundler --no-document
          export PATH="$HOME/.gem/ruby/3.1.0/bin:$PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV
          bundle install --jobs 4 --retry 3

      - name: Install Jekyll
        run: gem install jekyll

      - name: Clean & Build Jekyll
        run: |
          rm -rf _site .jekyll-cache
          JEKYLL_ENV=production bundle exec jekyll build --trace

      - name: Verify _site directory after build
        run: ls -la _site

      - name: Upload built Jekyll site
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site
          path: _site
          retention-days: 30  # Keep the artifact for 5 days

      - name: Debug Ruby and Bundler
        run: |
          ruby -v
          gem -v
          which ruby
          which gem
          which bundle



  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set GH_PAT in Environment
        run: echo "GH_PAT=${{ secrets.GH_PAT }}" >> $GITHUB_ENV

      - name: Debug Environment Variables (After Setting GH_PAT)
        run: env | grep GH_

      - name: Set Other Environment Variables
        run: echo "PAGES_REPO_NWO=singhaidotnish/blog" >> $GITHUB_ENV

#      - name: Checkout Repository
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0  # Ensures full history
#          repository: singhaidotnish/blog
#          token: ${{ secrets.GH_PAT }}  # Use a PAT if needed

#      - name: Setup Ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: '3.1'  # Ensure this matches your `build` job
#          bundler-cache: true   # Enables Bundler caching

#      - name: Install Bundler
#        run: |
#          gem install bundler --no-document
#          export PATH="$HOME/.gem/ruby/3.1.0/bin:$PATH"
#          echo "PATH=$PATH" >> $GITHUB_ENV

#      - name: Debug Bundler in Deploy
#        run: |
#          which bundle || echo "❌ Bundler NOT found"
#          echo "✅ PATH: $PATH"

#      - name: Install Dependencies
#        run: bundle install --jobs 4 --retry 3

      - name: Download built Jekyll site
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: _site

      - name: Verify _site directory after build
        run: ls -la _site

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to gh-pages
        run: |
          git clone --branch gh-pages --single-branch "https://${{ secrets.GH_PAT }}@github.com/singhaidotnish/blog.git" gh-pages
          rm -rf gh-pages/*
          cp -r _site/* gh-pages/
          cd gh-pages
          git add .
          git commit -m "Deploy Jekyll site" || echo "No changes to commit"
          git push "https://${{ secrets.GH_PAT }}@github.com/singhaidotnish/blog.git" gh-pages